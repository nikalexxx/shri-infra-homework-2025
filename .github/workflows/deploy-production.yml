name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version to deploy"
        required: true
        type: string

env:
  REGISTRY_ID: crpqbd58jh7j024b4dqk
  REGISTRY_URL: cr.yandex
  VM_IP: 89.169.178.69
  VM_USER: askar

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Login to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ secrets.YC_USERNAME }}
          password: ${{ secrets.YC_PASSWORD }}

      - name: Check if image exists
        run: |
          docker pull ${{ env.REGISTRY_URL }}/${{ env.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest || exit 1

      - name: Deploy to VM
        run: |
          # Stop and remove existing container
          ssh -o StrictHostKeyChecking=no ${{ env.VM_USER }}@${{ env.VM_IP }} "
            docker stop shri-app || true
            docker rm shri-app || true
          "

          # Pull and run new image
          ssh -o StrictHostKeyChecking=no ${{ env.VM_USER }}@${{ env.VM_IP }} "
            docker pull ${{ env.REGISTRY_URL }}/${{ env.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
            docker run -d --name shri-app -p 3000:3000 ${{ env.REGISTRY_URL }}/${{ env.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
          "

      - name: Add deployment comment to release issue
        run: |
          # Find the release issue
          ISSUE_NUMBER=$(gh issue list --search "Release v${{ github.event.inputs.release_version }}" --json number --jq '.[0].number')

          if [ ! -z "$ISSUE_NUMBER" ]; then
            gh issue comment $ISSUE_NUMBER --body "## Production Deployment

          **Date:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          **Deployed by:** ${{ github.actor }}
          **Version:** ${{ github.event.inputs.release_version }}

          Application deployed to production at http://${{ env.VM_IP }}:3000/hw/store"
          fi
