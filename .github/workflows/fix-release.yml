name: 3. Fix Release Pipeline

on:
  workflow_dispatch:
    inputs:
      release_version:
        type: string
        description: 'Version of the release to fix (e.g., "1")'
        required: true

env:
  REGISTRY_ID: ${{ secrets.YANDEX_REGISTRY_ID }}
  VERSION: ${{ github.event.inputs.release_version }}
  FIX_NUMBER: ${{ github.run_number }}
  DOCKER_IMAGE_NAME: cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app
  YANDEX_OAUTH_TOKEN: ${{ secrets.YANDEX_OAUTH_TOKEN }}

jobs:
  lint-and-test:
    uses: ./.github/workflows/tests.yml

  build-and-push:
    name: Build and Push Docker Image
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from releases/${{ env.VERSION }}
        uses: actions/checkout@v4
        with:
          ref: releases/${{ env.VERSION }}

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE_NAME:${VERSION}_fix${FIX_NUMBER} \
                       -t $DOCKER_IMAGE_NAME:${VERSION}_latest .

      - name: Login to Yandex Container Registry
        run: |
          echo ${{ secrets.YANDEX_OAUTH_TOKEN }} | docker login cr.yandex -u oauth --password-stdin

      # –ø—É—à–∏–º –∫–æ–Ω—Ç–µ–∏–Ω–µ—Ä—ã —Å —Ç–µ–≥–∞–º–∏ version_latest, and fix_version
      - name: Push Docker images
        run: |
          docker push $DOCKER_IMAGE_NAME:${VERSION}_fix${FIX_NUMBER}
          docker push $DOCKER_IMAGE_NAME:${VERSION}_latest

      # —Å–æ–∑–¥–∞—ë—Ç —Ç–µ–≥ —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–ª–∏–∑–∞ + –ø–æ–º–µ—Ç–∫–æ–π `fix` –∏ –Ω–æ–º–µ—Ä–æ–º —Ñ–∏–∫—Å–∞
      - name: Create Git tag v${{ env.VERSION }}_fix${{ env.FIX_NUMBER }}
        run: |
          git tag v${{ env.VERSION }}_fix${{ env.FIX_NUMBER }}
          git push origin v${{ env.VERSION }}_fix${{ env.FIX_NUMBER }}

      - name: Get previous commits
        id: commits
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ || echo "")
          if [ -z "$PREV_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" HEAD)
          else
            COMMITS=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)")
          fi
          echo "COMMITS<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Find issue by release version
        id: find_issue
        uses: actions/github-script@v7
        env:
          VERSION: ${{ inputs.release_version }}
        with:
          script: |
            const tagName = 'Release v' + process.env.VERSION;
            const response = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',  // –∏—â–µ–º –∏ –æ—Ç–∫—Ä—ã—Ç—ã–µ, –∏ –∑–∞–∫—Ä—ã—Ç—ã–µ
              per_page: 100
            });

            const issue = response.data.find(i => i.title === tagName);

            if (!issue) {
              console.log(`Issue —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º "${tagName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
              core.setOutput('issue_number', '');
            } else {
              console.log(`–ù–∞–π–¥–µ–Ω Issue: #${issue.number}`);
              core.setOutput('issue_number', String(issue.number));
            }
            return issue ? { number: issue.number } : {};

      - name: Add comment to related GitHub Issue
        if: steps.find_issue.outputs.issue_number
        uses: actions/github-script@v7
        with:
          script: |
            const message = `
            ### üîß Fix Release Update

            - **Fix Version:** v${{ env.VERSION }}_fix${{ env.FIX_NUMBER }}
            - **Date:** $(date +'%Y-%m-%d')
            - **Author:** ${{ github.actor }}
            - **Docker Image:** ${{ env.DOCKER_IMAGE_NAME}}:${{ env.VERSION }}_fix${{ env.FIX_NUMBER }}
            ### üìÑ Changelog since last tag

            ${{ env.COMMITS }}

            ### üìÇ Link

            [cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }}](https://cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }})

            `;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.find_issue.outputs.issue_number }},
              body: message
            });