name: Fix Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Версия релиза для фикса"
        required: true
        type: string

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: [lint, test]
    name: run ${{ matrix.job }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - run: npm ci

      - name: run ${{ matrix.job }}
        run: npm run ${{ matrix.job }}

  fix-release:
    runs-on: ubuntu-latest
    needs: lint-and-test
    env:
      VERSION: ${{ github.event.inputs.version }}
      FIX_NUMBER: ${{ github.run_number }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/${{ env.VERSION }}

      - name: docker login to Yandex Cloud
        run: |
          echo "${{ secrets.YC_OAUTH_TOKEN }}" | docker login \
            --username oauth \
            --password-stdin cr.yandex

      - name: build and tag docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YC_CR_REGISTRY_ID }}/app:${VERSION}_fix${FIX_NUMBER} .
          docker tag cr.yandex/${{ secrets.YC_CR_REGISTRY_ID }}/app:${VERSION}_fix${FIX_NUMBER} cr.yandex/${{ secrets.YC_CR_REGISTRY_ID }}/app:${VERSION}_latest

      - name: push docker image
        run: |
          docker push cr.yandex/${{ secrets.YC_CR_REGISTRY_ID }}/app:${VERSION}_fix${FIX_NUMBER}
          docker push cr.yandex/${{ secrets.YC_CR_REGISTRY_ID }}/app:${VERSION}_latest

      - name: create git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${VERSION}_fix${FIX_NUMBER}
          git push origin ${VERSION}_fix${FIX_NUMBER}

      - name: get previous release tag
        id: prev_tag
        run: |
          git fetch --tags
          PREV_TAG=$(git tag --sort=-creatordate | grep "^${VERSION}" | sed -n 2p)
          if [ -z "$PREV_TAG" ]; then
            PREV_TAG=$(git tag --sort=-creatordate | grep -E '^[0-9]+$' | head -n 1)
          fi
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_OUTPUT

      - name: generate commit list
        id: changelog
        run: |
          if [ -z "${{ steps.prev_tag.outputs.PREV_TAG }}" ]; then
            COMMITS=$(git log --oneline)
          else
            COMMITS=$(git log ${{ steps.prev_tag.outputs.PREV_TAG }}..HEAD --oneline)
          fi
          echo "COMMITS:"
          echo "$COMMITS"
          echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: update CHANGELOG.md
        run: |
          PREV_TAG="${{ steps.prev_tag.outputs.PREV_TAG }}"
          if [ -n "$PREV_TAG" ]; then
            git fetch origin "releases/$PREV_TAG:releases/$PREV_TAG" || true
            BASE_BRANCH="releases/$PREV_TAG"
          else
            BASE_BRANCH="main"
          fi

          git checkout $BASE_BRANCH -- CHANGELOG.md || touch CHANGELOG.md

          echo "## Фикс ${VERSION}_fix${FIX_NUMBER} - $(date +'%Y-%m-%d')" > TEMP_CHANGELOG
          echo "${{ steps.changelog.outputs.COMMITS }}" >> TEMP_CHANGELOG
          echo "" >> TEMP_CHANGELOG
          cat CHANGELOG.md >> TEMP_CHANGELOG
          mv TEMP_CHANGELOG CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "update changelog for fix release ${VERSION}_fix${FIX_NUMBER}"
          git push origin releases/${VERSION}

      - name: generate fix release template
        run: |
          echo "**Версия фикса**: ${VERSION}_fix${FIX_NUMBER}" > .github/fix-release-template.md
          echo "**Дата фикса**: $(date +'%Y-%m-%d')" >> .github/fix-release-template.md
          echo "**Автор фикса**: ${{ github.actor }}" >> .github/fix-release-template.md
          echo "**Коммиты с предыдущего релизного (или фиксрелизного) тега**:" >> .github/fix-release-template.md
          echo "${{ steps.changelog.outputs.COMMITS }}" >> .github/fix-release-template.md
          echo "**Docker-образ в Yandex Container Registry**: cr.yandex/${{ secrets.YC_CR_REGISTRY_ID }}/app:${VERSION}_fix${FIX_NUMBER}" >> .github/fix-release-template.md

      - name: find related issue number
        id: find_issue
        uses: peter-evans/find-issue@v2
        with:
          title: "Версия ${{ env.VERSION }}"
          state: open

      - name: add comment to release issue
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ steps.find_issue.outputs.issue-number }}
          body-file: .github/fix-release-template.md
