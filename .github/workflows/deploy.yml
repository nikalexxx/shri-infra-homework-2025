name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to deploy (e.g., 1, 2, 3)'
        required: true

env:
  REGISTRY: cr.yandex
  IMAGE_NAME: app
  CONTAINER_NAME: shri-app

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Setup gcloud SDK
        uses: 'gcloud-sdk-action@v1'
        with:
          credentials_json: '${{ secrets.YC_SA_KEY_JSON }}'
          project_id: 'yandex-cloud' # –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
          region: 'ru-central1'

      - name: Check if image exists
        run: |
          yc container image list --registry-id ${{ secrets.YC_REGISTRY_ID }} --repository-name ${{ env.IMAGE_NAME }} \
          --filter 'tags="${{ github.event.inputs.release_version }}_latest"' \
          --format=json | jq -e '.[0]' > /dev/null || (echo "::error::Image for release ${{ github.event.inputs.release_version }} with _latest tag not found!" && exit 1)
          echo "Image found. Proceeding with deployment."

      - name: Deploy to VM via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_PUBLIC_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # –õ–æ–≥–∏–Ω–∏–º—Å—è –≤ Yandex Container Registry
            docker login \
              --username json_key \
              --password '${{ secrets.YC_SA_KEY_JSON }}' \
              ${{ env.REGISTRY }}.cr.yandex

            # –°–∫–∞—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é –æ–±—Ä–∞–∑–∞
            docker pull ${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest

            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true

            # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            docker run -d -p 3000:3000 \
              --name ${{ env.CONTAINER_NAME }} \
              --restart always \
              ${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest

      - name: Add deployment comment to Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const release_version = process.env.RELEASE_VERSION;
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              title: `Release v${release_version}`
            });
            if (issues.length === 0) {
              core.setFailed(`Could not find an issue for release ${release_version}`);
              return;
            }
            const issue_number = issues[0].number;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: `
                ### üöÄ Deployment Successful
                **Date:** ${new Date().toUTCString()}
                **Deployed by:** @${context.actor}
                **Release:** v${release_version} has been deployed to production.
              `
            });
        env:
          RELEASE_VERSION: ${{ github.event.inputs.release_version }}
