  name: 2. Manual Release Workflow

  on:
    workflow_dispatch:
      inputs:
        branch:
          type: string
          description: 'Branch to run CI on'
          default: main

  env:
    YANDEX_OAUTH_TOKEN: ${{ secrets.YANDEX_OAUTH_TOKEN }}
    REGISTRY_ID: ${{ secrets.YANDEX_REGISTRY_ID }}
    VERSION: ${{ github.run_number }}

  jobs:
    lint-and-test:
      uses: ./.github/workflows/tests.yml

    build-and-release:
      name: Build and Release
      # –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –ª–∏–Ω—Ç–µ—Ä –∏ —Ç–µ—Å—Ç—ã
      needs: lint-and-test
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Git user
          run: |
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"

        # –Ω–∞—Ö–æ–¥–∏–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥
        - name: Get previous tag
          id: prev_tag
          run: |
            PREV_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV

        # –æ—Ç–≤–æ–¥–∏—Ç –æ—Ç `main` —Ä–µ–ª–∏–∑—É–Ω—é –≤–µ—Ç–∫—É `releases/<–≤–µ—Ä—Å–∏—è_—Ä–µ–ª–∏–∑–∞>`
        - name: Create release branch
          run: |
            git checkout -b releases/${{ env.VERSION }}
            git push origin releases/${{ env.VERSION }}

        # [—Å–æ–±–∏—Ä–∞–µ—Ç docker-–æ–±—Ä–∞–∑](https://yandex.cloud/ru/docs/container-registry/operations/docker-image/docker-image-create) —Å –¥–≤—É–º—è —Ç–µ–≥–∞–º–∏ —Ç–µ–≥–∞–º–∏:
        - name: Build Docker image
          run: |
            docker build -t cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }} \
                        -t cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }}_latest .

        # https://yandex.cloud/ru/docs/container-registry/operations/authentication#cred-helper
        - name: Login to Yandex Container Registry
          run: |
            echo ${{ secrets.YANDEX_OAUTH_TOKEN }}|docker login \
              --username oauth \
              --password-stdin \
            cr.yandex

        - name: Push Docker images
          run: |
            docker push cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }}
            docker push cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }}_latest

        # - —Å–æ–∑–¥–∞—ë—Ç —Ç–µ–≥, —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç –≤ –≥–ª–∞–≤–Ω–æ–π –≤–µ—Ç–∫–µ
        - name: Create Git tag
          run: |
            git tag v${{ env.VERSION }}
            git push origin v${{ env.VERSION }}

        # –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∏—Ç–æ–≤ –¥–ª—è CHANGELOG.md
        - name: Generate commit list
          id: commits
          run: |
            if [ -z "${{ env.PREV_TAG }}" ]; then
              COMMITS=$(git log --pretty=format:"- %s (%h)" HEAD)
            else
              COMMITS=$(git log ${{ env.PREV_TAG }}..HEAD --pretty=format:"- %s (%h)")
            fi
            echo "COMMITS<<EOF" >> $GITHUB_ENV
            echo "$COMMITS" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

        #  –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª `CHANGELOG.md` –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞, –¥–æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å–≤–µ—Ä—Ö—É –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é –≤ –≤–∏–¥–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞, –∞ –ø–æ–¥ –Ω–µ–π ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∏—Ç–æ–≤ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ä–µ–ª–∏–∑–Ω–æ–≥–æ (–∏–ª–∏ —Ñ–∏–∫—Å—Ä–µ–ª–∏–∑–Ω–æ–≥–æ) —Ç–µ–≥–∞
        - name: Update CHANGELOG.md
          run: |
            echo "# v${{ env.VERSION }} $(date +'%Y-%m-%d')" > new_changelog.md
            echo "" >> new_changelog.md
            echo "${{ env.COMMITS }}" >> new_changelog.md
            echo "" >> new_changelog.md
            cat CHANGELOG.md >> new_changelog.md
            mv new_changelog.md CHANGELOG.md

            git add CHANGELOG.md
            git commit -m "Update CHANGELOG for v${{ env.VERSION }}"
            git push origin releases/${{ env.VERSION }}

        # —Å–æ–∑–¥–∞—ë—Ç Issue –≤ GitHub
        - name: Create GitHub Release Issue
          uses: dacbd/create-issue-action@main
          with:
            title: "Release v${{ env.VERSION }}"
            body: |
              ### üì¶ Release Information

              - **Version:** v${{ env.VERSION }}
              - **Date:** $(date +'%Y-%m-%d')
              - **Author:** ${{ github.actor }}
              - **Docker Image:** `cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }}`

              ### üìÑ Changelog

              ${{ env.COMMITS }}

              ### üìÇ Link

              [cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }}](https://cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }})
              
            labels: "release"
            token: ${{ secrets.GITHUB_TOKEN }}