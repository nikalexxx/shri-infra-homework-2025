name: Release

on:
  workflow_dispatch

env:
  DOCKER_REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app
  DOCKER_TAG: ${{ github.run_number }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: |
          npm ci
          npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: |
          npm ci
          npm test

  release:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create release branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -b releases/$DOCKER_TAG
          git push origin releases/$DOCKER_TAG

      - name: Build and push Docker image
        env:
          YC_SA_KEY: ${{ secrets.YC_SA_KEY }}
        run: |
          echo "$YC_SA_KEY" | docker login --username json_key --password-stdin cr.yandex
          docker build -t $DOCKER_REGISTRY:$DOCKER_TAG .
          docker tag $DOCKER_REGISTRY:$DOCKER_TAG $DOCKER_REGISTRY:${DOCKER_TAG}_latest
          docker push $DOCKER_REGISTRY:$DOCKER_TAG
          docker push $DOCKER_REGISTRY:${DOCKER_TAG}_latest

      - name: Tag release
        run: |
          git tag -a v$DOCKER_TAG -m "Release v$DOCKER_TAG"
          git push origin v$DOCKER_TAG

      - name: Generate changelog
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 v$DOCKER_TAG^ 2>/dev/null || echo "")
          COMMITS=$(git log ${PREV_TAG:+$PREV_TAG..HEAD} --pretty=format:"- %h %s (%an)")

          {
            echo "# v$DOCKER_TAG ($(date '+%Y-%m-%d'))"
            echo "## Changes"
            echo "$COMMITS"
            echo "## Docker Image"
            echo "$DOCKER_REGISTRY:$DOCKER_TAG"
          } > full_changelog.txt

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat full_changelog.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG.md
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          test -f CHANGELOG.md || touch CHANGELOG.md
          echo -e "${{ steps.changelog.outputs.changelog }}\n\n$(cat CHANGELOG.md)" > CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for v$DOCKER_TAG"
          git push --set-upstream origin releases/$DOCKER_TAG

      - name: Create release issue
        if: github.event.repository.has_issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create \
            --title "ðŸš€ Release v$DOCKER_TAG" \
            --body "$(cat <<EOF
            # ðŸš€ Release v$DOCKER_TAG
            
            **Date:** $(date '+%Y-%m-%d %H:%M')  
            **Author:** @${{ github.actor }}  
            **Docker Image:** \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:$DOCKER_TAG\`
            
            ---
            
            ## âœ¨ Changes since previous release:
            
            ${{ steps.changelog.outputs.commits }}
            EOF
          )"
