name: Deploy prod

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: "Version to release"
      issue-number:
        type: number
        required: true
        description: "Release Issue number id"

jobs:
  start_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Run docker container by ssh
steps:
  - name: Auth SSH
    run: |
      mkdir -p ~/.ssh
      echo "${{ secrets.SSH_KEY }}" > ~/.ssh/secret_key
      chmod 600 ~/.ssh/secret_key
      ssh-keyscan -H ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts

  - name: Deploy
    run: |
      ssh -i ~/.ssh/secret_key ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "sudo docker rm -f ${{ secrets.YC_REGISTRY_ID }} && sudo docker run --name ${{ secrets.YC_REGISTRY_ID }} -d -p 3000:3000 cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ inputs.version }}_latest"

  - name: –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–ª–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    id: comment_body
    run: |
      echo "body<<EOF" >> $GITHUB_OUTPUT
      echo "üîß **–§–∏–∫—Å —Ä–µ–ª–∏–∑–∞ \`${VERSION}\`**" >> $GITHUB_OUTPUT
      echo "üìÖ –î–∞—Ç–∞ —Ñ–∏–∫—Å–∞: ${{ steps.date.outputs.date }}" >> $GITHUB_OUTPUT
      echo "üë§ –ê–≤—Ç–æ—Ä: @${{ github.actor }}" >> $GITHUB_OUTPUT
      echo "üßæ –í–µ—Ä—Å–∏—è: \`${VERSION}_fix${FIX}\`" >> $GITHUB_OUTPUT
      echo "üì¶ Docker –æ–±—Ä–∞–∑—ã:" >> $GITHUB_OUTPUT
      echo "\`${REGISTRY}/${IMAGE_NAME}:${VERSION}_fix${FIX}\`" >> $GITHUB_OUTPUT
      echo "\`${REGISTRY}/${IMAGE_NAME}:${VERSION}_latest\`" >> $GITHUB_OUTPUT
      echo "üîç –ö–æ–º–º–∏—Ç—ã —Å –º–æ–º–µ–Ω—Ç–∞ \`${{ steps.prev_tag.outputs.prev_tag }}\`:" >> $GITHUB_OUTPUT
      echo '```markdown' >> $GITHUB_OUTPUT
      echo "${{ steps.changelog.outputs.log }}" >> $GITHUB_OUTPUT
      echo '```' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  - name: Comment to GitHub Issue
    uses: peter-evans/create-or-update-comment@v4
    with:
      issue-number: ${{inputs.issue-number}}
      body: ${{ steps.comment_body.outputs.body }}