name: Fix Flow

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to fix (e.g., 1.0.0)'
        required: true

env:
  YANDEX_REGISTRY_ID: 'crp83o2nv5jjr7il9b35' # Замени на свой идентификатор реестра!
  YANDEX_CR_SA_KEY_ID: ${{ secrets.YANDEX_CR_SA_KEY_ID }}
  YANDEX_CR_SA_PRIVATE_KEY: ${{ secrets.YANDEX_CR_SA_PRIVATE_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Автоматически предоставляется GitHub Actions

jobs:
  create_fix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }} # Чекаутнуть нужную релизную ветку
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Type Check (tsc)
        run: npm run lint # Assuming lint includes type checking or add a dedicated type check script if needed.

      - name: Run Tests
        run: npm run test

      - name: Get latest tag for previous fix
        id: get_previous_fix_tag
        run: |
          # Ищем последний тег для этой релизной ветки (vX.X.X или vX.X.X_fixY)
          PREVIOUS_TAG=$(git tag --sort=-v:refname | grep "^v${{ github.event.inputs.release_version }}" | head -n 1)
          if [ -z "$PREVIOUS_TAG" ]; then
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD) # Если тегов нет, берём первый коммит в этой ветке
          fi
          echo "Previous fix tag: $PREVIOUS_TAG"
          echo "previous_fix_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

      - name: Login to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: cr.yandex
          username: ${{ env.YANDEX_CR_SA_KEY_ID }}
          password: ${{ env.YANDEX_CR_SA_PRIVATE_KEY }}

      - name: Build Docker image for fix
        id: build_image
        run: |
          FIX_VERSION_TAG="${{ github.event.inputs.release_version }}_fix${{ github.run_number }}"
          docker build -t cr.yandex/${{ env.YANDEX_REGISTRY_ID }}/app:${{ FIX_VERSION_TAG }} .
          docker tag cr.yandex/${{ env.YANDEX_REGISTRY_ID }}/app:${{ FIX_VERSION_TAG }} cr.yandex/${{ env.YANDEX_REGISTRY_ID }}/app:latest
          echo "fix_version_tag=${FIX_VERSION_TAG}" >> $GITHUB_OUTPUT

      - name: Push Docker image for fix
        run: |
          docker push cr.yandex/${{ env.YANDEX_REGISTRY_ID }}/app:${{ steps.build_image.outputs.fix_version_tag }}
          docker push cr.yandex/${{ env.YANDEX_REGISTRY_ID }}/app:latest

      - name: Create Git tag for fix
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a v${{ steps.build_image.outputs.fix_version_tag }} -m "Fix release v${{ steps.build_image.outputs.fix_version_tag }}"
          git push origin v${{ steps.build_image.outputs.fix_version_tag }}

      - name: Generate commit list for fix
        id: generate_fix_commits
        run: |
          COMMITS=$(git log --pretty=format:"* %h - %s (%an)" ${{ steps.get_previous_fix_tag.outputs.previous_fix_tag }}..HEAD)
          echo "commits_list<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Add comment to GitHub Issue
        uses: octokit/request-action@v2
        with:
          route: POST /repos/{owner}/{repo}/issues/${{ github.event.inputs.issue_number || 1 }} # Предполагаем, что issue_number будет передан или это первый issue
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          headers:
            authorization: token ${{ secrets.GITHUB_TOKEN }}
          body: |
            {
              "body": "
                ---
                **Фикс к релизу ${{ github.event.inputs.release_version }}**

                **Дата фикса:** $(date +'%Y-%m-%d %H:%M:%S')
                **Автор фикса:** ${{ github.actor }}
                **Версия фикса:** ${{ steps.build_image.outputs.fix_version_tag }}

                **Список коммитов с предыдущего релиза/фикса в этой ветке:**
                ${{ steps.generate_fix_commits.outputs.commits_list }}

                **Ссылка на Docker-образ в Yandex Container Registry:**
                cr.yandex/${{ env.YANDEX_REGISTRY_ID }}/app:${{ steps.build_image.outputs.fix_version_tag }}
              "
            }